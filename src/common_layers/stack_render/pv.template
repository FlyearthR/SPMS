version: '3'
services:

  binding_generator:
    image: {{registry}}binding_generator_service
    depends_on:
      - "logger"
    networks:
      - net

  binding_manager:
    image: {{registry}}binding_manager_service
    depends_on:
      - "logger"
      - "binding_generator"
    environment:
      VERIFIERS: '{{verifier_list}}'
      {% if exp %}LOGICAL_EXP: '{{exp}}' {% endif %}
      LOGGER_ADDR: logger:80
      PR_GATEWAY: pr_gateway:80
      BINDING_GENERATOR: binding_generator:80
    networks:
      - net

  mt_manager:
    image: {{registry}}mt_manager_service
    volumes:
      - /dev/shm/pv.key:/dev/shm/pv.key
      - ./pv.crt:/dev/shm/pv.crt
    environment:
      BM_ADDR: binding_manager:80
      PR_GATEWAY: pr_gateway:80
    depends_on:
      - "binding_manager"
      - "logger"
    networks:
      - net

  user_gateway:
    image: {{registry}}user_gateway_service
    ports:
# in future, to replace with 443
      - 80:80
    environment:
      BM_ADDR: binding_manager:80
      MT_ADDR: mt_manager:80
    depends_on:
      - "binding_manager"
      - "mt_manager"
      - "logger"
    networks:
      - net

  pr_gateway:
    image: {{registry}}pr_gateway_service
    volumes:
      - ./pv.config:/pv.config
      - /dev/shm/pv.key:/dev/shm/pv.key
      - ./pv.crt:/dev/shm/pv.crt
      - ./root_ca.crt:/dev/shm/root_ca.crt
    environment:
      BM_ADDR: binding_manager:80
      PR_ADDR: 10.20.3.50
    depends_on:
      - "binding_manager"
      - "logger"
    networks:
      - net

  logger:
    image: {{registry}}logger_service
    networks:
      - net
{% for verifier, type in verifiers.items() %}
  {{verifier}}:
    image: {{registry}}{{type}}_verifier:latest
    environment:
      VERIFIER_ID: {{verifier}}
      BM_ADDR: binding_manager:80
      REGISTRY: {{registry}}
      LOGGER_ADDR: logger:80
    volumes:
      - /dev/shm:/dev/shm
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "binding_manager"
    networks:
      - net
{% endfor %}
networks:
  net:
